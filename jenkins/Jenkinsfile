pipeline {
    agent any
    environment {
        ECR_REPO    = '442042536659.dkr.ecr.ap-south-1.amazonaws.com/cicd-demo'
        IMAGE_TAG   = "v1.${BUILD_NUMBER}"
        ECS_CLUSTER = 'cicd-demo-cluster'
        ECS_SERVICE = 'cicd-demo-service'
    }
    stages {
        stage('Checkout Code') {
            steps {
                git branch: 'main', url: 'https://github.com/UjwalNagrikar/Automated-CI-CD-Pipeline-for-Containerized-Web-Application-on-AWS.git'
            }
        }
        stage('Build & Run Locally') {
            steps {
                sh '''
                    # Build Docker image
                    docker build -t $ECR_REPO:$IMAGE_TAG .

                    # Stop & remove any old container running on port 8081
                    docker rm -f my-app || true

                    # Run the container mapping host 8081 to container 80
                    docker run -d -p 8081:80 --name my-app $ECR_REPO:$IMAGE_TAG
                '''
            }
        }
        stage('Login to ECR') {
            steps {
                sh 'aws ecr get-login-password --region ap-south-1 | docker login --username AWS --password-stdin $ECR_REPO'
            }
        }
        stage('Push to ECR') {
            steps {
                sh 'docker push $ECR_REPO:$IMAGE_TAG'
            }
        }
        stage('Deploy to ECS') {
            steps {
                sh '''
                    aws ecs update-service \
                        --cluster $ECS_CLUSTER \
                        --service $ECS_SERVICE \
                        --force-new-deployment \
                        --region ap-south-1
                '''
            }
        }
    }
}